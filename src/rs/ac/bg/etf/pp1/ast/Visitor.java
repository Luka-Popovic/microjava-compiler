// generated with ast extension for cup
// version 0.8
// 6/1/2018 13:54:6


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Unmatched Unmatched);
    public void visit(ConstDeclParam ConstDeclParam);
    public void visit(VarDeclParamClass VarDeclParamClass);
    public void visit(ExprAdd ExprAdd);
    public void visit(MethodDecl MethodDecl);
    public void visit(Mulop Mulop);
    public void visit(PotentialExtend PotentialExtend);
    public void visit(Matched Matched);
    public void visit(Relop Relop);
    public void visit(MethodDeclParam MethodDeclParam);
    public void visit(VarDeclParam VarDeclParam);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(CondTermLogicalOr CondTermLogicalOr);
    public void visit(DesignatorArr DesignatorArr);
    public void visit(DoMathcPart DoMathcPart);
    public void visit(StatementList StatementList);
    public void visit(ConstDeclarIdent ConstDeclarIdent);
    public void visit(TermMulop TermMulop);
    public void visit(Addop Addop);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(ConstList ConstList);
    public void visit(Designator Designator);
    public void visit(Term Term);
    public void visit(ConstTypeList ConstTypeList);
    public void visit(VarTypeName VarTypeName);
    public void visit(Condition Condition);
    public void visit(ConstDeclList ConstDeclList);
    public void visit(FormalParamName FormalParamName);
    public void visit(DoStatement DoStatement);
    public void visit(ActualParamList ActualParamList);
    public void visit(CondTermLogicalAnd CondTermLogicalAnd);
    public void visit(ExprList ExprList);
    public void visit(IfBothPart IfBothPart);
    public void visit(TermMul TermMul);
    public void visit(VarDeclList VarDeclList);
    public void visit(FormalParamList FormalParamList);
    public void visit(Expr Expr);
    public void visit(ActPars ActPars);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(FormalPars FormalPars);
    public void visit(ClassDeclFirstPart ClassDeclFirstPart);
    public void visit(ClassDeclList ClassDeclList);
    public void visit(PotentialNumber PotentialNumber);
    public void visit(DesignatorDot DesignatorDot);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(ConstDecl ConstDecl);
    public void visit(PotentialExpr PotentialExpr);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(LowerEqualRelOp LowerEqualRelOp);
    public void visit(LowerRelOp LowerRelOp);
    public void visit(GreaterEqualRelOp GreaterEqualRelOp);
    public void visit(GreaterRelOp GreaterRelOp);
    public void visit(NotBinEquality NotBinEquality);
    public void visit(BinEquality BinEquality);
    public void visit(ConditionFactors ConditionFactors);
    public void visit(ConditionFactor ConditionFactor);
    public void visit(CondTermAnd CondTermAnd);
    public void visit(ConditionTerm ConditionTerm);
    public void visit(ConditionTerms ConditionTerms);
    public void visit(CondTermOr CondTermOr);
    public void visit(SingleCondition SingleCondition);
    public void visit(Conditions Conditions);
    public void visit(ActualParam ActualParam);
    public void visit(ActualParams ActualParams);
    public void visit(NoActuals NoActuals);
    public void visit(Actuals Actuals);
    public void visit(WithNoExpr WithNoExpr);
    public void visit(WithExpr WithExpr);
    public void visit(FuncCall FuncCall);
    public void visit(Var Var);
    public void visit(FactorNewTypeWithExpr FactorNewTypeWithExpr);
    public void visit(FactorNewType FactorNewType);
    public void visit(FactorBooleanConst FactorBooleanConst);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactorCharConst FactorCharConst);
    public void visit(FactorNumberConst FactorNumberConst);
    public void visit(Mod Mod);
    public void visit(Div Div);
    public void visit(Mul Mul);
    public void visit(Minus Minus);
    public void visit(Plus Plus);
    public void visit(TermMulOperation TermMulOperation);
    public void visit(TermFact TermFact);
    public void visit(FactorMulop FactorMulop);
    public void visit(SingleTerm SingleTerm);
    public void visit(TermList TermList);
    public void visit(ExprTerm ExprTerm);
    public void visit(ExprTermMinus ExprTermMinus);
    public void visit(ExprAddop ExprAddop);
    public void visit(ExprAddOpOperation ExprAddOpOperation);
    public void visit(SingleExprMinus SingleExprMinus);
    public void visit(SingleExpr SingleExpr);
    public void visit(ExprLists ExprLists);
    public void visit(SingleDesignatorExprArray SingleDesignatorExprArray);
    public void visit(SingleDesignatorDot SingleDesignatorDot);
    public void visit(DesignatorDots DesignatorDots);
    public void visit(DesignatorArray DesignatorArray);
    public void visit(DesignatorIdent DesignatorIdent);
    public void visit(DesignatorExpr DesignatorExpr);
    public void visit(DesignatorDotIdent DesignatorDotIdent);
    public void visit(DesignatorStatementProcCall DesignatorStatementProcCall);
    public void visit(DesignatorStatementDec DesignatorStatementDec);
    public void visit(DesignatorStatementInc DesignatorStatementInc);
    public void visit(DesignatorStatementAssignment DesignatorStatementAssignment);
    public void visit(NoPotentialNumbers NoPotentialNumbers);
    public void visit(PotentialNumbers PotentialNumbers);
    public void visit(DoStmt DoStmt);
    public void visit(ErrAssignment ErrAssignment);
    public void visit(DoWhileExpr DoWhileExpr);
    public void visit(ReturnExpr ReturnExpr);
    public void visit(NoReturnExpr NoReturnExpr);
    public void visit(ContinueExpr ContinueExpr);
    public void visit(BreakExpr BreakExpr);
    public void visit(Statements Statements);
    public void visit(PrintStmt PrintStmt);
    public void visit(ReadStmt ReadStmt);
    public void visit(MatchedIfError MatchedIfError);
    public void visit(MatchedIf MatchedIf);
    public void visit(Assignment Assignment);
    public void visit(ThenPart ThenPart);
    public void visit(IfPart IfPart);
    public void visit(UnmatchedIfError UnmatchedIfError);
    public void visit(UnmatchedIfElse UnmatchedIfElse);
    public void visit(UnmatchedIf UnmatchedIf);
    public void visit(UnmachedStmt UnmachedStmt);
    public void visit(MatchedStmt MatchedStmt);
    public void visit(NoStatementLists NoStatementLists);
    public void visit(StatementLists StatementLists);
    public void visit(Type Type);
    public void visit(FormalParamNameNoSqParent FormalParamNameNoSqParent);
    public void visit(FormalParamNameSqParent FormalParamNameSqParent);
    public void visit(FormalParameterDeclaration FormalParameterDeclaration);
    public void visit(FormalParamListErrorComma FormalParamListErrorComma);
    public void visit(SingleFormalParameterList SingleFormalParameterList);
    public void visit(FormalParameterList FormalParameterList);
    public void visit(NoFormalParameters NoFormalParameters);
    public void visit(FormalParameters FormalParameters);
    public void visit(VoidType VoidType);
    public void visit(MethodDeclName MethodDeclName);
    public void visit(MethodDeclError MethodDeclError);
    public void visit(MethodDeclarationVoid MethodDeclarationVoid);
    public void visit(MethodDeclaration MethodDeclaration);
    public void visit(NoMethodDeclarationList NoMethodDeclarationList);
    public void visit(MethodDeclarationList MethodDeclarationList);
    public void visit(NoMethodDeclarationParam NoMethodDeclarationParam);
    public void visit(MethodDeclarationParam MethodDeclarationParam);
    public void visit(NoPotentialExtends NoPotentialExtends);
    public void visit(PotentialExtends PotentialExtends);
    public void visit(VarDClass VarDClass);
    public void visit(ClassDeclName ClassDeclName);
    public void visit(ClassDeclarationFirstPart ClassDeclarationFirstPart);
    public void visit(ClassDeclarationList ClassDeclarationList);
    public void visit(VarDeclarationCommaError VarDeclarationCommaError);
    public void visit(NoVarDeclaration NoVarDeclaration);
    public void visit(VarDeclarationNoSqParent VarDeclarationNoSqParent);
    public void visit(VarDeclarationSqParent VarDeclarationSqParent);
    public void visit(VarTypeNameNoSqParent VarTypeNameNoSqParent);
    public void visit(VarTypeNameSqParent VarTypeNameSqParent);
    public void visit(VarDeclarationListError VarDeclarationListError);
    public void visit(VarDeclarationList VarDeclarationList);
    public void visit(NoVarDeclarationParam NoVarDeclarationParam);
    public void visit(VarDeclarationParam VarDeclarationParam);
    public void visit(CharConst CharConst);
    public void visit(BooleanConst BooleanConst);
    public void visit(NumberConst NumberConst);
    public void visit(ConstDeclrIdent ConstDeclrIdent);
    public void visit(ConstDeclParamErrorSemiComma ConstDeclParamErrorSemiComma);
    public void visit(ConstDeclParamErrorComma ConstDeclParamErrorComma);
    public void visit(NoConstDeclarationParam NoConstDeclarationParam);
    public void visit(ConstDeclarationParam ConstDeclarationParam);
    public void visit(ConstTypeName ConstTypeName);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(ConstListClasstDecl ConstListClasstDecl);
    public void visit(ConstListVarDecl ConstListVarDecl);
    public void visit(ConstListConstDecl ConstListConstDecl);
    public void visit(NoConstDeclarationList NoConstDeclarationList);
    public void visit(ConstDeclarationList ConstDeclarationList);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
